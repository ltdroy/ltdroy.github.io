<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on LTD Personal Website</title>
    <link>/post/</link>
    <description>Recent content in Posts on LTD Personal Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Algorithmic art: &#39;Spiral Portal&#39;</title>
      <link>/2020/05/09/algorithmic-art-spiral-portal/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/09/algorithmic-art-spiral-portal/</guid>
      <description>After enjoying Antonio Sánchez Chinchón’s DataCamp tutorial on using R and ggplot2 for algorithmic flower drawing based on Phyllotaxis, I decided to spend an afternoon exploring the techniques he covered. I extended the single flower techniques to a multi-flower image with each flower positioned to form an overall flower shape. The effect makes me think of a portal to a strange multicolor world.
A multicolor spiral portal image built in R and ggplot2</description>
    </item>
    
    <item>
      <title>Twinkling Starry Night with JS and Processing (Interactive)</title>
      <link>/2020/02/16/draw-twinkling-stars-with-javascript-and-processing/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/02/16/draw-twinkling-stars-with-javascript-and-processing/</guid>
      <description>Background I&amp;rsquo;ve been learning about algorithmic art, which is a visual art genre that uses an algorithm (usually coded on a computer) to draw interesting or evocative images. While it is possible to do this in many languages, I decided to delve into the Processing language, which is a Java-style language and development environment that is specialised for visualisation.
What is this? This is an early casual output of that exploration.</description>
    </item>
    
    <item>
      <title>Why Confidence Intervals matter: An imagined dialogue</title>
      <link>/2020/01/22/why-confidence-intervals-matter-an-imagined-dialogue/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/22/why-confidence-intervals-matter-an-imagined-dialogue/</guid>
      <description>Motivation Despite sociology chatter to the contrary, the below is an attempt to illustrate that the practical value of confidence intervals can be articulated in a straightforward way, and can be understood by decision-makers.
Setup The scene takes place between a civil servant (CS) in the ‘Department of Learning’ and an academic researcher (AR). The latter is advising the former on research methods, and the way that the civil service might go about collecting and interpreting data on the performance of schools, and different educational programs.</description>
    </item>
    
    <item>
      <title>Stats puzzle solution: How long until you can expect to win the lottery?</title>
      <link>/2019/03/05/stats-puzzle-solution-how-long-until-you-can-expect-to-win-the-lottery/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/05/stats-puzzle-solution-how-long-until-you-can-expect-to-win-the-lottery/</guid>
      <description>The ProblemIn the main game of the National Lottery (Lotto), the chance that one ticket wins a share of the Jackpot is 1 in 13,983,816.
Susie plans to buy 100 tickets with different numbers in each draw until she wins a Jackpot share. There are two draws per week.
Which of the following is closest to the time she can expect to wait until she wins a Jackpot share?</description>
    </item>
    
    <item>
      <title>Generate two variables with an arbitrary Pearson correlation (proof and demo)</title>
      <link>/2018/09/11/generate-two-variables-with-an-arbitrary-pearson-correlation-proof-and-demo/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/09/11/generate-two-variables-with-an-arbitrary-pearson-correlation-proof-and-demo/</guid>
      <description>Theorem\[y = x + \epsilon\]
Where \(x\) and \(\epsilon\) are random independent variables and \(\epsilon\) has an expected value of 0.
\[\implies \rho_{x,y} = \frac{\sigma_x}{\sqrt{\sigma_x^2 + \sigma_{\epsilon}^2} }\]
Where \(\rho_{x,y}\) is the Pearson product moment correlation between \(x\) and \(y\), and \(\sigma_x\) is the standard deviation of \(x\), etc.
ProofTo prove this we rely on the following previously established theorems regarding the properties of the expected value operator (\(E[\cdot]\)), the definition of variance of a random variable in terms of expected value, and the definition of the Pearson correlation.</description>
    </item>
    
  </channel>
</rss>